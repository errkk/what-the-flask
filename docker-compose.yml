version: "3.9"
# This is the docker compose file
# Relevant at run time
# It will use dockere to run all the services we need
# At the moment, we're just running one called web, but we could add others, for example postgres
# And cos they're in Docker, they can all speak to each other as if they're on a little network!
services:
  web:
    # Build using the Dockerfile in the same directory as this
    build: .
    # Map port 5000 on the container to 5000 on our mac, so we can see stuff
    # When a request gets to the host (your computer), docker forwards it to the container
    # The EXPOSE line in the Dockerfile lets the container accept the request
    ports:
      - "5000:5000"
    # Volumes mount the project folder inside the container. Meaning that if we change files on the mac
    # they'll be updated in the container too so we can do coding, lol
    # This is because the container can "see" the files that we're working on
    volumes:
      - .:/code
    # We can set environment variables for the container here.
    # This is useful for configs etc, like if we needed an API key or wotnot
    environment:
      FLASK_ENV: development
      PGPASSWORD: "postgres"
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@postgres:5432/flaskexample"

    # We need the postgres container for this one to do it's thing
    depends_on:
      - postgres

  # We also need a postgres server
  # This will be another docker container, but they can speak to eachother inside of docker's network
  # usign the container name as a hostname. for example, the internal hostname of this one will be "postgres"
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    ports:
      - "5432:5432"
